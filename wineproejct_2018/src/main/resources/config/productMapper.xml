<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="product.dao.ProductMapper">

 	<select id="getProductList" parameterType="java.util.Map"
		resultType="Product">
		select * from product order by productId desc limit #{startRow}, #{size};
	</select> 
	<select id="getProduct" parameterType="int" resultType="Product">
		select *
		from product where productId = #{productId}
	</select>
	<select id="getProductCount" resultType="int">
		select count(*) from
		product
	</select>
	<select id="manySaleProduct" resultType="Product">
		select * from product
		order by count desc limit 0, 5
	</select>
	<select id="searchWine" parameterType="java.util.Map" resultType="Product">
		select * from product
		<if	test="condition != null and conditionType == 'nation' and startPrice == null and endPrice == null">
			where nation LIKE CONCAT('%',#{condition},'%')
		</if>
		<if test="condition != null and conditionType == 'wineKinds' and startPrice == null and endPrice == null">
			where wineKinds LIKE CONCAT('%',#{condition},'%')
		</if>
		<if test="condition == null and conditionType == 'price' and startPrice != null and endPrice != null">
			where price between #{startPrice} and #{endPrice}
		</if>
		<if	test="condition != null and conditionType == 'search' and startPrice == null and endPrice == null">
			where wineKinds LIKE CONCAT('%',#{condition},'%') or producer LIKE
			CONCAT('%',#{condition},'%') or variety LIKE
			CONCAT('%',#{condition},'%')
			or wineKinds LIKE CONCAT('%',#{condition},'%') or productName LIKE
			CONCAT('%',#{condition},'%') or wineEx LIKE
			CONCAT('%',#{condition},'%')
			or brandEx LIKE CONCAT('%',#{condition},'%') or nation LIKE
			CONCAT('%',#{condition},'%') or year LIKE
			CONCAT('%',#{condition},'%') or
			alcohol LIKE CONCAT('%',#{condition},'%') or weight LIKE
			CONCAT('%',#{condition},'%') or temperature LIKE
			CONCAT('%',#{condition},'%')
		</if>
		<choose>
				<when test="arrangement == 'frame'">
					order by count
				</when>	
				<when test="arrangement == 'newProduct'">
					order by productId desc
				</when>
				<when test="arrangement == 'cheap'">
					order by price
				</when>
				<when test="arrangement == 'expenssive'">
					order by price desc
				</when>
				<otherwise>
				
				</otherwise>				
			</choose>
			 limit #{startRow}, #{size};
	</select>
	<select id="searchWineCount" parameterType="ProductSearch" resultType="int">
		select count(*) from product
		<if	test="condition != null and conditionType == 'nation' and startPrice == null and endPrice == null">
			where nation LIKE CONCAT('%',#{condition},'%')
		</if>
		<if test="condition != null and conditionType == 'wineKinds' and startPrice == null and endPrice == null">
			where wineKinds LIKE CONCAT('%',#{condition},'%')
		</if>
		<if test="condition == null and conditionType == 'price' and startPrice != null and endPrice != null">
			where price between #{startPrice} and #{endPrice}
		</if>
		<if	test="condition != null and conditionType == 'search' and startPrice == null and endPrice == null">
			where wineKinds LIKE CONCAT('%',#{condition},'%') or producer LIKE
			CONCAT('%',#{condition},'%') or variety LIKE
			CONCAT('%',#{condition},'%')
			or wineKinds LIKE CONCAT('%',#{condition},'%') or productName LIKE
			CONCAT('%',#{condition},'%') or wineEx LIKE
			CONCAT('%',#{condition},'%')
			or brandEx LIKE CONCAT('%',#{condition},'%') or nation LIKE
			CONCAT('%',#{condition},'%') or year LIKE
			CONCAT('%',#{condition},'%') or
			alcohol LIKE CONCAT('%',#{condition},'%') or weight LIKE
			CONCAT('%',#{condition},'%') or temperature LIKE
			CONCAT('%',#{condition},'%')
		</if>
		<choose>
				<when test="arrangement == 'frame'">
					order by count
				</when>	
				<when test="arrangement == 'newProduct'">
					order by productId desc
				</when>
				<when test="arrangement == 'cheap'">
					order by price
				</when>
				<when test="arrangement == 'expenssive'">
					order by price desc
				</when>
				<otherwise>
				
				</otherwise>				
			</choose>
	</select>
	

</mapper>